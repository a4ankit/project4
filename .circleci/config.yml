general:
# Uncomment the following to specify only a specific branch
   branches:
    only:
      - dev # specific branch
       - /dev-.*/ # or regexes

machine:
  timezone: America/New_York
  environment:
    # from https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli_standalone.htm
    # and https://developer.salesforce.com/media/salesforce-cli/manifest.json
    DX_CLI_URL: https://developer.salesforce.com/media/salesforce-cli/sfdx-v5.7.6-d42cf65-linux-amd64.tar.xz
    SFDX_DISABLE_ENCRYPTION: true

dependencies:
  override:
    - wget -qO- $DX_CLI_URL | tar xJf -
    - ./sfdx/install
    - mkdir tmp
    - echo 'make hub key'
    - echo $HUB_SERVER_KEY_HEX | xxd -r -ps >> keys/hub.key
    - openssl rsa -in keys/hub.key -check -noout
    - sfdx force:auth:jwt:grant --clientid $CONSUMERKEY --jwtkeyfile assets/server.key --username $USERNAME --setdefaultdevhubusername -a hub

    - echo 'make deploy key'
    - echo $DEPLOY_SERVER_KEY_HEX | xxd -r -ps >> keys/deploy.key
    - openssl rsa -in keys/deploy.key -check -noout
    - sfdx force:auth:jwt:grant --clientid $CONSUMERKEY --jwtkeyfile keys/deploy.key --username $USERNAME -a deploy


test:
  override:
    - sfdx force --help
    - sfdx force:org:create -s -f config/project-scratch-def.json -a circle_build_$CIRCLE_BUILD_NUM
    - sfdx force:source:push -u circle_build_$CIRCLE_BUILD_NUM
    - mkdir -p $CIRCLE_TEST_REPORTS/junit
    - sfdx force:apex:test:run -c -d $CIRCLE_TEST_REPORTS/junit -r junit
  post:
    - sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p

### Uncomment the following if performing deployments
deployment:
  override:
    - sfdx force:source:convert -r force-app -d testDeploy
    - . cleanupDeploy.sh
    - sfdx force:mdapi:deploy -d testDeploy/ -u deploy -w 2job-definition: &jobdef
    docker:
        - image: circleci/openjdk:latest-node-browsers
    steps:
        - checkout
        - restore_cache:
            keys:
                - sfdx-6.8.2-local
        - run:
            name: Install Salesforce DX
            command: |
                openssl aes-256-cbc -k $KEY -in assets/server.key.enc -out assets/server.key -d -md md5
                if [ ! -d node_modules/sfdx-cli ]; then
                    export SFDX_AUTOUPDATE_DISABLE=true
                    export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true
                    export SFDX_DOMAIN_RETRY=300
                    npm install sfdx-cli
                    node_modules/sfdx-cli/bin/run --version
                    node_modules/sfdx-cli/bin/run plugins --core
                fi
        - save_cache:
            key: sfdx-6.8.2-local
            paths: 
                - node_modules
        - run: 
            name: Create Scratch Org
            command: |
                node_modules/sfdx-cli/bin/run force:auth:jwt:grant --clientid $CONSUMERKEY --jwtkeyfile assets/server.key --username $USERNAME 			--setdefaultdevhubusername -a DevhubOrg
                echo "Creating scratch org with definition $SCRATCH_DEF"
                node_modules/sfdx-cli/bin/run force:org:create -v DevhubOrg -s -f "config/$SCRATCH_DEF" -a scratch
        - run:
            name: Remove Server Key
            when: always	
            command: |
                rm assets/server.key
        - run:
            name: Install Lightning Testing Service
            command: |
                node_modules/sfdx-cli/bin/run force:lightning:test:install -t jasmine
        - run: 
            name: Push Source
            command: |
                node_modules/sfdx-cli/bin/run force:source:push -u scratch
        - run:
            name: Run Apex Tests
            command: |
                mkdir ~/tests
                mkdir ~/tests/apex
                node_modules/sfdx-cli/bin/run force:apex:test:run -u scratch -c -r human -d ~/tests/apex -w 9999
        - run:
            name: Run Lightning Tests
            command: | 
                mkdir ~/tests/lightning
                node_modules/sfdx-cli/bin/run force:lightning:test:run -d ~/tests/lightning -r human -a septaTrainsTests.app -o
        - run: 
            name: Clean Up
            when: always
            command: |
                node_modules/sfdx-cli/bin/run force:org:delete -u scratch -p
                rm ~/tests/apex/*.txt ~/tests/apex/test-result-7*.json
        - store_artifacts:
            path: ~/tests
        - store_test_results:
            path: ~/tests

version: 2
jobs:
  static-analysis:
    docker:
      - image: circleci/openjdk:latest
    steps:
      - checkout
      - restore_cache:
          keys: 
            - pmd-v6.0.1
      - run:
          name: Install PMD
          command: |
              if [ ! -d pmd-bin-6.0.1 ]; then
                  curl -L "https://github.com/pmd/pmd/releases/download/pmd_releases/6.0.1/pmd-bin-6.0.1.zip" -o pmd-bin-6.0.1.zip
                  unzip pmd-bin-6.0.1.zip
                  rm pmd-bin-6.0.1.zip
              fi
      - save_cache:
          key: pmd-v6.0.1
          paths: 
              - pmd-bin-6.0.1
      
      - store_artifacts:
          path: static-analysis.txt
  build-enterprise:
     <<: *jobdef
     environment:
        SCRATCH_DEF: project-scratch-def.json
workflows:
  version: 2
  test_and_static:
    jobs:
      - build-enterprise

      - static-analysis

